// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import ctx "github.com/asymptoter/practice-backend/base/ctx"
import mock "github.com/stretchr/testify/mock"
import models "github.com/asymptoter/practice-backend/models"

import uuid "github.com/google/uuid"

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// Create provides a mock function with given fields: context, _a1
func (_m *Store) Create(context ctx.CTX, _a1 *models.User) error {
	ret := _m.Called(context, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(ctx.CTX, *models.User) error); ok {
		r0 = rf(context, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetByToken provides a mock function with given fields: context, token
func (_m *Store) GetByToken(context ctx.CTX, token uuid.UUID) (*models.User, error) {
	ret := _m.Called(context, token)

	var r0 *models.User
	if rf, ok := ret.Get(0).(func(ctx.CTX, uuid.UUID) *models.User); ok {
		r0 = rf(context, token)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(ctx.CTX, uuid.UUID) error); ok {
		r1 = rf(context, token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
